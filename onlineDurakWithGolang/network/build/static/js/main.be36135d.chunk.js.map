{"version":3,"sources":["cardDict.js","components/card.js","components/hand.js","components/cardsOnTheTable.js","components/options.js","App.js","serviceWorker.js","index.js"],"names":["cardDict","Suit","0","1","2","3","100","Rank","6","7","8","9","10","11","12","13","14","PlayingCard","chosen","this","props","chosenCard","border","bg","text","onClick","clicked","Header","Body","Title","Footer","Component","Hand","bind","card","action","cards","i","length","push","key","md","Table","cardsBeaten","cardsNotBeaten","beaten","notBeaten","style","height","borderStyle","Options","attackOptions","defenceOptions","canBeDoneWithAttack","variant","size","block","buttonPress","disabled","className","sm","attack","App","state","nonBeaten","hand","attacking","options","defenceChoices","cardForDefence","socket","kozir","finished","controller","defend","pickCardForDefence","finishOrTake","that","event","obj","JSON","parse","data","e","console","log","Object","keys","setState","mes","webSocket","WebSocket","onmessage","dictArr","dict","ii","cardId","getCardId","send","toString","attackingCard","message","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be36135d.chunk.js","sourcesContent":["export const cardDict = {\n    Suit:\n        { 0: \"Spade\", 1: \"Diamond\", 2: \"Club\", 3: \"Heart\",100:\"Hidden\" },\n    Rank: { 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\", 10: \"Ten\", 11: \"Jack\", 12: \"Queen\", 13: \"King\", 14: \"Ace\",100:\"Hidden\"}\n}","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card'\nimport {cardDict} from '../cardDict'\n\nclass PlayingCard extends Component {\n\n    render() {\n        \n        var chosen = this.props.chosenCard? (this.props.chosenCard.Suit === this.props.Suit) && (this.props.chosenCard.Rank === this.props.Rank) : false\n        return (\n            <Card border='secondary' bg={chosen?\"info\": \"\"} text={chosen?\"white\":\"\"}   onClick={()=> this.props.clicked({Suit: this.props.Suit,Rank: this.props.Rank} )}>\n            <Card.Header>{cardDict[\"Suit\"][this.props.Suit]}</Card.Header>\n            <Card.Body>\n              <Card.Title>{cardDict[\"Rank\"][this.props.Rank]}</Card.Title>\n            </Card.Body>\n            <Card.Footer> {cardDict[\"Suit\"][this.props.Suit]} </Card.Footer>\n          </Card>\n        );\n    }\n}\n\nexport default PlayingCard;","import React, { Component } from 'react';\nimport '../App.css';\nimport PlayingCard from './card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass Hand extends Component {\n\n  constructor(props) {\n    super(props);\n    this.clicked = this.clicked.bind(this);\n  }\n\n  clicked(card){\n    this.props.action(card)\n  }\n\n  render() {\n      var cards = []\n      for( var i = 0; i < this.props.cards.length;i++){\n          cards.push(<Col key={i} md=\"auto\"><PlayingCard Suit={this.props.cards[i].Suit} Rank={this.props.cards[i].Rank} clicked={this.clicked} chosenCard={this.props.chosenCard}> </PlayingCard></Col> )\n      } \n    return (     \n        <Row>\n          {cards}\n        </Row> \n    );\n  }\n}\n\nexport default Hand;\n\n\n","import React, { Component } from 'react';\nimport '../App.css';\nimport PlayingCard from './card'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\n\nclass Table extends Component {\n\n    render() {\n        var cardsBeaten = []\n        var cardsNotBeaten = []\n        for (var i = 0; i < this.props.beaten.length; i++) {\n            cardsBeaten.push(\n                <PlayingCard key={i+40} Suit={this.props.beaten[i].Suit} Rank={this.props.beaten[i].Rank} clicked={function () { }}> </PlayingCard>\n            )\n        }\n        for (i = 0; i < this.props.notBeaten.length; i++) {\n            cardsNotBeaten.push(<PlayingCard key={i+20} Suit={this.props.notBeaten[i].Suit} Rank={this.props.notBeaten[i].Rank} clicked={this.props.action}> </PlayingCard>)\n        } \n        return (\n            <Container style={{ height: '90%'}}>\n                <div>\n                Not Beaten cards\n                </div>\n                <Row style={{ height: '50%', borderStyle:'groove' }}>\n                    {cardsNotBeaten}\n                </Row>\n                <div>\n                Beaten cards\n                </div>\n                <Row style={{ height: '50%', borderStyle:'groove'}}>\n                    {cardsBeaten}\n                </Row>\n            </Container>\n\n        );\n    }\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport '../App.css';\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container';\n\nclass Options extends Component {\n\n  constructor(props) {\n    super(props);\n    this.attackOptions = this.attackOptions.bind(this);\n    this.defenceOptions = this.defenceOptions.bind(this);\n  }\n\n  attackOptions(){\n      if (this.props.canBeDoneWithAttack){\n        return (<Button variant=\"success\" size=\"lg\" block onClick={this.props.buttonPress}>Finish attack</Button>);\n      } else {\n        return (<Button variant=\"success\" size=\"lg\" block disabled onClick={this.props.buttonPress}>Finish attack</Button>);\n      }\n  }\n\n  defenceOptions(){\n      return (\n        <Button variant=\"warning\" size=\"lg\" block onClick={this.props.buttonPress}> Take cards</Button>\n      );\n  }\n\n  render() {\n    return (\n       <Container>\n       <Row className=\"justify-content-md-center\">\n           <Col sm={4}>\n            {this.props.attack? this.attackOptions(): this.defenceOptions()}\n           </Col>\n        </Row>\n       </Container>\n    );\n  }\n}\n\nexport default Options;\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Hand from './components/hand'\nimport Card from 'react-bootstrap/Card'\nimport Table from './components/cardsOnTheTable'\nimport Options from './components/options'\nimport {cardDict} from './cardDict'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      nonBeaten:[ ],\n      beaten: [],\n      hand:[],\n      attacking:null,\n      options:[],\n      defenceChoices:[],\n      cardForDefence: {},\n      socket:null,\n      kozir: null,\n      finished:false\n    }\n    this.controller = this.controller.bind(this);\n    this.attack = this.attack.bind(this);\n    this.defend = this.defend.bind(this);\n    this.pickCardForDefence = this.pickCardForDefence.bind(this);\n    this.finishOrTake = this.finishOrTake.bind(this);\n  }\n\n\n   controller(that, event) {\n    try{\n      var obj = JSON.parse(event.data)\n    } catch(e){\n      console.log(e)\n      return\n    }\n    console.log(\"EVENT: \", obj)\n    switch(Object.keys(obj)[0]){\n      case \"attack\":\n        that.setState({\n          hand: obj[\"attack\"][\"deck\"],\n          attacking: true,\n          nonBeaten:obj[\"attack\"][\"nonBeaten\"],\n          beaten:obj[\"attack\"][\"beaten\"],\n          kozir: obj[\"attack\"][\"kozir\"][0][\"Suit\"]\n        })\n        break\n      case \"defence\":\n        that.setState({\n          hand: obj[\"defence\"][\"deck\"],\n          attacking: false,\n          nonBeaten:obj[\"defence\"][\"nonBeaten\"],\n          beaten:obj[\"defence\"][\"beaten\"],\n          cardForDefence:null,\n          kozir:obj[\"defence\"][\"kozir\"][0][\"Suit\"]\n        })\n        break\n      case \"options\":\n        that.setState({ options: obj[\"options\"],cardForDefence: null})\n        break\n      case \"defenceChoices\":\n          that.setState({ defenceChoices: obj[\"defenceChoices\"]})\n        break\n      case \"message\":\n        var mes = obj[\"message\"]\n        if (mes === \"Broke connection\"){\n          console.log(\"Other player broke connection!\")\n        }else if (mes === \"Done!\") {\n          that.setState({ finished: true, attacking:null})\n        } else {\n          console.log(\"RECEIVED MESSAGE \", mes)\n        }\n        break\n      default:\n        console.log(\"UNKONWN MESSAGE\",event.data)\n    }\n  }\n\n  componentDidMount(){\n    var webSocket = new WebSocket(\"ws://localhost:8080/api\",);\n    console.log(\"Launched!\")\n    this.setState({socket:webSocket})\n    webSocket.onmessage = (event) => this.controller(this,event)\n  }\n\n  getCardId(dictArr,dict){\n    for (var ii=0;ii<dictArr.length;ii++){\n      if ( (dictArr[ii].Suit === dict.Suit) && (dictArr[ii].Rank === dict.Rank) ){\n        return ii\n      }\n    }\n    return -10\n  }\n\n\n  attack(card){\n    console.log(\"attack with\",card)\n    var cardId = this.getCardId(this.state.hand, card)\n    console.log(\"Card id: \", cardId)\n    if (cardId !== -10){\n      this.state.socket.send(cardId.toString())\n    }\n  }\n\n  defend(attackingCard){\n    console.log(\"defend with\",attackingCard)\n    var cardId = this.getCardId(this.state.nonBeaten,attackingCard)\n    if (cardId != -10) {\n      this.state.socket.send(cardId.toString())\n    }\n  }\n\n  pickCardForDefence(chosenCard){\n    console.log(\"picked for defence, \", chosenCard)\n    var cardId = this.getCardId(this.state.hand,chosenCard)\n    console.log(this.state)\n    if (cardId !== -10 && (this.state.cardForDefence == null || this.state.defenceChoices.length == 0)){\n      this.setState({\n        cardForDefence: chosenCard\n      })\n      this.state.socket.send(cardId.toString())\n  }\n  }\n\n  finishOrTake(){\n    console.log(\"Finish or take\")\n    this.state.socket.send('1000')\n  }\n\n\n\n\n  render() { \n    var message\n    var kozir = cardDict[\"Suit\"][this.state.kozir]\n    if (this.state.finished){\n      message = this.state.hand.length === 0 ? <h2>You won!</h2>: <h2>You lost!</h2>\n    } else {\n      if (this.state.attacking){\n        message = <h2>You are the attacker. Kozir suit: {kozir} </h2>\n      } else if (this.state.attacking !== null) {\n        message = <h2>You are the defender. Kozir suit: {kozir} </h2>\n      } else {\n        message = <h2>Waiting for another player to join</h2>\n      }\n    }\n    return (\n      <div className=\"App\">\n        <Card>\n          <Card.Header style={{ height: '15%'}}>\n              { message } \n              {this.state.attacking === null? null : <Options attack={this.state.attacking} buttonPress={this.finishOrTake} canBeDoneWithAttack={(this.state.nonBeaten.length + this.state.beaten.length !== 0) && (this.state.nonBeaten.length === 0) }>  </Options>}\n          </Card.Header>\n          <Card.Body>\n            <Table beaten = {this.state.beaten} notBeaten={this.state.nonBeaten} action={this.state.cardForDefence!==null?this.defend:function(){}} defenceOptions={this.state.defenceChoices}> </Table>\n          </Card.Body>\n          <Card.Footer style={{ height: '25%'}}>\n            <Hand cards={this.state.hand} action={this.state.attacking?this.attack:this.pickCardForDefence } attacking={this.state.attacking} chosenCard={this.state.cardForDefence}> </Hand>\n          </Card.Footer>\n        </Card>\n      </div> \n    )\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}